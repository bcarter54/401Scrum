// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _401ScrumApp.Data;

#nullable disable

namespace _401ScrumApp.Migrations
{
    [DbContext(typeof(StalwartSaintsDbContext))]
    partial class StalwartSaintsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.14");

            modelBuilder.Entity("_401ScrumApp.Models.Blessing", b =>
                {
                    b.Property<int>("BlessingGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BlessingGroup")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BlessingGroupID");

                    b.ToTable("Blessings");
                });

            modelBuilder.Entity("_401ScrumApp.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StudyGroupID")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("TEXT");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EventID");

                    b.HasIndex("StudyGroupID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("_401ScrumApp.Models.Like", b =>
                {
                    b.Property<int>("LikeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("VerseID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VideoID")
                        .HasColumnType("INTEGER");

                    b.HasKey("LikeID");

                    b.HasIndex("Username");

                    b.HasIndex("VerseID");

                    b.HasIndex("VideoID");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("_401ScrumApp.Models.StudyGroup", b =>
                {
                    b.Property<int>("StudyGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Approved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StudyGroupID");

                    b.ToTable("StudyGroups");
                });

            modelBuilder.Entity("_401ScrumApp.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("_401ScrumApp.Models.UserGroup", b =>
                {
                    b.Property<int>("UserGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudyGroupID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserGroupID");

                    b.HasIndex("StudyGroupID");

                    b.HasIndex("Username");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("_401ScrumApp.Models.Verse", b =>
                {
                    b.Property<int>("VerseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Approved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Blessing")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("BlessingGroupID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Invitation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InvitationGroup")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VerseLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("VerseID");

                    b.ToTable("Verses");
                });

            modelBuilder.Entity("_401ScrumApp.Models.Video", b =>
                {
                    b.Property<int>("VideoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Approved")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BlessingGroupID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("VideoID");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("_401ScrumApp.Models.Event", b =>
                {
                    b.HasOne("_401ScrumApp.Models.StudyGroup", "StudyGroup")
                        .WithMany()
                        .HasForeignKey("StudyGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyGroup");
                });

            modelBuilder.Entity("_401ScrumApp.Models.Like", b =>
                {
                    b.HasOne("_401ScrumApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_401ScrumApp.Models.Verse", "Verse")
                        .WithMany()
                        .HasForeignKey("VerseID");

                    b.HasOne("_401ScrumApp.Models.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoID");

                    b.Navigation("User");

                    b.Navigation("Verse");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("_401ScrumApp.Models.UserGroup", b =>
                {
                    b.HasOne("_401ScrumApp.Models.StudyGroup", "StudyGroup")
                        .WithMany()
                        .HasForeignKey("StudyGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_401ScrumApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyGroup");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
